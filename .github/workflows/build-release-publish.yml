name: Build-Release-Publish

on:
  push:
    branches:
      - master
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  WORKFLOW_BUILD_SLN: AtCoderLibrary.sln

jobs:
  get-version:
    uses: kzrnm/dotnet-actions/.github/workflows/get-version.yml@v1
    with:
      project-path: Directory.Build.props

  format:
    uses: kzrnm/dotnet-actions/.github/workflows/format.yml@v1
    with:
      target: AtCoderLibrary.sln
      dotnet-version: 6.0.x

  library-checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            3.0.x
            3.1.x
            6.0.x
      - uses: actions/cache@v2
        name: Cache NuGet
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - uses: actions/cache@v2
        name: Cache pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: dotnet tool install -g SourceExpander.Console
      - uses: actions/setup-python@v1
      - run: pip3 install git+https://github.com/kzrnm/verification-helper
      - name: Run tests
        run: oj-verify run

  build:
    runs-on: ubuntu-latest
    needs: [get-version]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            3.0.x
            3.1.x
            6.0.x
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build
        run: dotnet build ${{ env.WORKFLOW_BUILD_SLN }} -c Release
      - name: Test
        run: dotnet test ${{ env.WORKFLOW_BUILD_SLN }} --no-build --logger GitHubActions -c Release
      - uses: actions/upload-artifact@v1
        if: ${{ needs.get-version.outputs.is-new == 'true' }}
        with:
          name: dist
          path: bin/Packages/Release

  publish:
    needs: [get-version, build, format, library-checker]
    if: ${{ needs.get-version.outputs.is-new == 'true' }}
    uses: kzrnm/dotnet-actions/.github/workflows/publish.yml@v1
    with:
      artifact-name: dist
      version: ${{ needs.get-version.outputs.version }}
      is-prerelease: ${{ needs.get-version.outputs.is-prerelease == 'true' }}
    secrets:
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
